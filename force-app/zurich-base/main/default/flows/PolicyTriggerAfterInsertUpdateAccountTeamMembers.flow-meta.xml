<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>58.0</apiVersion>
    <assignments>
        <name>AccountTeamMemberInstanceAssignment</name>
        <label>Account Team Member Instance Assignment</label>
        <locationX>704</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>newAccountTeamMember.UserId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>IntermediaryUsersLoop.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newAccountTeamMember.AccountId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>PoliciesLoop.PolicyHolder__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newAccountTeamMember.AccountAccessLevel</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>Edit</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newAccountTeamMember.TeamMemberRole</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>Mediador</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AccountTeamMembersToInsertAssignment</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AccountTeamMembersToInsertAssignment</name>
        <label>Account Team Members to Insert Assignment</label>
        <locationX>704</locationX>
        <locationY>971</locationY>
        <assignmentItems>
            <assignToReference>accountTeamMembersToInsert</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>newAccountTeamMember</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IntermediaryUsersLoop</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>PolicyIntermediaryUserDecision</name>
        <label>Is the Policy Intermediary User?</label>
        <locationX>836</locationX>
        <locationY>755</locationY>
        <defaultConnector>
            <targetReference>IntermediaryUsersLoop</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>PoliciesLoop.IntermediaryVisibilityAcc__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>IntermediaryUsersLoop.ContactAccountId__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AccountTeamMemberInstanceAssignment</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>Obtener el User asociado a la Cuenta Mediador Visibilidad y almacenar su id en intermediaryUserId.
Si intermediaryUserId no es nulo: Insertar un registro de AccountTeamMember</description>
    <environments>Default</environments>
    <interviewLabel>Policy Trigger - After Insert/Update - Account Team Members {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Policy Trigger - After Insert/Update - Account Team Members</label>
    <loops>
        <name>IntermediaryUsersLoop</name>
        <label>Intermediary Users Loop</label>
        <locationX>616</locationX>
        <locationY>647</locationY>
        <collectionReference>intermediaryUserId</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>PolicyIntermediaryUserDecision</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>PoliciesLoop</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>PoliciesLoop</name>
        <label>Policies Loop</label>
        <locationX>176</locationX>
        <locationY>539</locationY>
        <collectionReference>GetPolicies</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>IntermediaryUsersLoop</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>CreateAccountTeamMembersAction</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>CreateAccountTeamMembersAction</name>
        <label>Create Account Team Members</label>
        <locationX>176</locationX>
        <locationY>1331</locationY>
        <inputReference>accountTeamMembersToInsert</inputReference>
    </recordCreates>
    <recordLookups>
        <name>GetIntermediaryUserId</name>
        <label>Get intermediaryUserId</label>
        <locationX>176</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>PoliciesLoop</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ContactAccountId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.IntermediaryVisibilityAcc__c</elementReference>
            </value>
        </filters>
        <object>User</object>
        <outputReference>intermediaryUserId</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>ContactAccountId__c</queriedFields>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
    </recordLookups>
    <recordLookups>
        <name>GetPolicies</name>
        <label>Get Policies</label>
        <locationX>176</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetIntermediaryUserId</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Policy__c</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>IntermediaryVisibilityAcc__c</queriedFields>
        <queriedFields>PolicyHolder__c</queriedFields>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetPolicies</targetReference>
        </connector>
        <filterFormula>AND(NOT(ISBLANK({!$Record.IntermediaryVisibilityAcc__c})), OR(ISNEW(), ISCHANGED({!$Record.IntermediaryVisibilityAcc__c})))</filterFormula>
        <object>Policy__c</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <triggerOrder>1700</triggerOrder>
    <variables>
        <name>accountTeamMembersToInsert</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>AccountTeamMember</objectType>
    </variables>
    <variables>
        <name>currentItemFromSourceCollection</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Policy__c</objectType>
    </variables>
    <variables>
        <name>intermediaryUserId</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>User</objectType>
    </variables>
    <variables>
        <name>newAccountTeamMember</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>AccountTeamMember</objectType>
    </variables>
</Flow>
