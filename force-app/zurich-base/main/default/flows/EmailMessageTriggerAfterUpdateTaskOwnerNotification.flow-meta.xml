<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>sendNotificationTaskOwner</name>
        <label>Send Notification Task Owner</label>
        <locationX>50</locationX>
        <locationY>1247</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <faultConnector>
            <targetReference>createRecordSendNotificationErrorAction</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>getCustomNotificationAction.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>formulaBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <elementReference>tittleOwner</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>idsOwner</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Parent.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>56.0</apiVersion>
    <assignments>
        <name>idOwnerAssigment</name>
        <label>ID Owner Assignment</label>
        <locationX>314</locationX>
        <locationY>935</locationY>
        <assignmentItems>
            <assignToReference>idsOwner</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>taskLoop.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>taskLoop</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>duplicatedValueDecision</name>
        <label>Duplicated value</label>
        <locationX>226</locationX>
        <locationY>815</locationY>
        <defaultConnector>
            <targetReference>idOwnerAssigment</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Duplicated</defaultConnectorLabel>
        <rules>
            <name>DuplicatedOutcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>idsOwner</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>taskLoop.WhatId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>taskLoop</targetReference>
            </connector>
            <label>Duplicated</label>
        </rules>
    </decisions>
    <decisions>
        <name>uspCaseDecision</name>
        <label>USP Case</label>
        <locationX>578</locationX>
        <locationY>335</locationY>
        <defaultConnectorLabel>Not USP</defaultConnectorLabel>
        <rules>
            <name>caseUspOutcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Parent.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>USPInquiry</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getCustomNotificationAction</targetReference>
            </connector>
            <label>Case USP</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>formulaBody</name>
        <dataType>String</dataType>
        <expression>{!principioBody}+{!$Record.Parent.CaseNumber}+{!finalBody}</expression>
    </formulas>
    <interviewLabel>EmailMessage Trigger - After update - Task Owner Notification {!$Flow.CurrentDateTime}</interviewLabel>
    <label>EmailMessage Trigger - After update - Task Owner Notification</label>
    <loops>
        <name>taskLoop</name>
        <label>Task Loop</label>
        <locationX>50</locationX>
        <locationY>695</locationY>
        <collectionReference>getTaskAssociated</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>duplicatedValueDecision</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>sendNotificationTaskOwner</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>createRecordGetNotificationErrorAction</name>
        <label>Create Record Get Notification Error Action</label>
        <locationX>842</locationX>
        <locationY>575</locationY>
        <inputAssignments>
            <field>Message__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Source_Class__c</field>
            <value>
                <stringValue>EmailMessage Trigger - After update - Task Owner Notification</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Source_Method__c</field>
            <value>
                <stringValue>Recuperar notificación custom</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Throwing_Time__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <object>Error_Log__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>createRecordGetTaskAssociatedErrorAction</name>
        <label>Create Record Get Task Associated Error Action</label>
        <locationX>578</locationX>
        <locationY>695</locationY>
        <inputAssignments>
            <field>Message__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Source_Class__c</field>
            <value>
                <stringValue>EmailMessage Trigger - After update - Task Owner Notification</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Source_Method__c</field>
            <value>
                <stringValue>Recuperar notificación tareas asociadas al caso</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Throwing_Time__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <object>Error_Log__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>createRecordSendNotificationErrorAction</name>
        <label>Create Record Send Notification Error Action</label>
        <locationX>314</locationX>
        <locationY>1367</locationY>
        <inputAssignments>
            <field>Message__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Source_Class__c</field>
            <value>
                <stringValue>EmailMessage Trigger - After update - Task Owner Notification</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Source_Method__c</field>
            <value>
                <stringValue>Enviar notificación al propietario de la task</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Throwing_Time__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <object>Error_Log__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>getCustomNotificationAction</name>
        <label>Get Custom Notification</label>
        <locationX>50</locationX>
        <locationY>455</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>getTaskAssociated</targetReference>
        </connector>
        <faultConnector>
            <targetReference>createRecordGetNotificationErrorAction</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>CaseTrackingAnswered</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getTaskAssociated</name>
        <label>Get Task Associated</label>
        <locationX>50</locationX>
        <locationY>575</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>taskLoop</targetReference>
        </connector>
        <faultConnector>
            <targetReference>createRecordGetTaskAssociatedErrorAction</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>WhatId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Subject</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Seguimiento</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>452</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>uspCaseDecision</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>EmailMessage</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>bodyOwner</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Un caso en seguimiento acaba de recibir respuesta</stringValue>
        </value>
    </variables>
    <variables>
        <name>ERROR</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>An error occurred for Update Account Flow {!$Flow.CurrentDateTime}    Running User: {!$User.FirstName} Error: {!$Flow.FaultMessage} Error Time: {!$Flow.CurrentDateTime}   -------------------------------------  </stringValue>
        </value>
    </variables>
    <variables>
        <name>finalBody</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>, que se encontraba en seguimiento, ha recibido una respuesta</stringValue>
        </value>
    </variables>
    <variables>
        <name>idsOwner</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>principioBody</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>El caso,</stringValue>
        </value>
    </variables>
    <variables>
        <name>tittleOwner</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Caso en seguimiento respondido</stringValue>
        </value>
    </variables>
</Flow>
