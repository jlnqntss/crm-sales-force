<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>56.0</apiVersion>
    <assignments>
        <name>PolicyPartnerAssignment</name>
        <label>Asignación Partner Póliza</label>
        <locationX>182</locationX>
        <locationY>671</locationY>
        <assignmentItems>
            <assignToReference>$Record.AccountId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.PolicyId__r.Partner__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SuppliedEmailDecision</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>CaseUspDecision</name>
        <label>Caso USP</label>
        <locationX>611</locationX>
        <locationY>311</locationY>
        <defaultConnectorLabel>Not USP</defaultConnectorLabel>
        <rules>
            <name>USPOutcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>USPInquiry</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>PolicyNotNullDecision</targetReference>
            </connector>
            <label>USP</label>
        </rules>
    </decisions>
    <decisions>
        <name>PolicyNotNullDecision</name>
        <label>Poliza Informada</label>
        <locationX>380</locationX>
        <locationY>551</locationY>
        <defaultConnector>
            <targetReference>GetContactsAction</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Poliza Nula</defaultConnectorLabel>
        <rules>
            <name>PolicyOutcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.PolicyId__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.PolicyId__r.Partner__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>PolicyPartnerAssignment</targetReference>
            </connector>
            <label>Poliza y Partner Informado</label>
        </rules>
    </decisions>
    <decisions>
        <name>SuppliedEmailDecision</name>
        <label>¿Supplied Email informado?</label>
        <locationX>182</locationX>
        <locationY>791</locationY>
        <defaultConnectorLabel>Supplied Email no informado</defaultConnectorLabel>
        <rules>
            <name>SuppliedEmailOutcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetContactAccountPartnerAction</targetReference>
            </connector>
            <label>Supplied Email Informado</label>
        </rules>
    </decisions>
    <description>Para los casos con Área de origen: Partner, busca la vinculación del caso con la cuenta de Partner, tanto a través de la póliza asociada como a través del remitente del email</description>
    <environments>Default</environments>
    <formulas>
        <name>Debug</name>
        <dataType>String</dataType>
        <expression>{!$Record.PolicyId__c}&amp;BR()&amp;
{!$Record.HegeoPolicyId__c}&amp;BR()&amp;
{!$Record.AccountId}&amp;BR()&amp;
{!$Record.ContactId}</expression>
    </formulas>
    <formulas>
        <name>idRecordTypeContactPartner</name>
        <dataType>String</dataType>
        <expression>IF({!$Organization.Id}={!$CustomMetadata.Global_Configuration__mdt.Instances_Id.Value__c},{!$CustomMetadata.Global_Configuration__mdt.RecordType_Contact_Partner.Value__c}, 
IF({!$Organization.Id}={!$CustomMetadata.Global_Configuration__mdt.Instances_Id.Uat_Value__c}, {!$CustomMetadata.Global_Configuration__mdt.RecordType_Contact_Partner.Uat_Value__c}, 
IF({!$Organization.Id}={!$CustomMetadata.Global_Configuration__mdt.Instances_Id.Staging_Value__c}, {!$CustomMetadata.Global_Configuration__mdt.RecordType_Contact_Partner.Staging_Value__c}, 
{!$CustomMetadata.Global_Configuration__mdt.RecordType_Contact_Partner.Dev_Value__c})
)
)</expression>
    </formulas>
    <interviewLabel>Case Trigger - Before Insert/update - Vinculacion Contacto Partner {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case Trigger - Before Insert/Update - Vinculacion Contacto Partner</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>GetContactAccountPartnerAction</name>
        <label>Recuperar Contacto Cuenta Partner</label>
        <locationX>50</locationX>
        <locationY>911</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.PolicyId__r.Partner__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>idRecordTypeContactPartner</elementReference>
            </value>
        </filters>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.SuppliedEmail</elementReference>
            </value>
        </filters>
        <object>Contact</object>
        <outputAssignments>
            <assignToReference>$Record.ContactId</assignToReference>
            <field>Id</field>
        </outputAssignments>
        <sortField>Title</sortField>
        <sortOrder>Desc</sortOrder>
    </recordLookups>
    <recordLookups>
        <name>GetContactsAction</name>
        <label>Recuperar Contactos</label>
        <locationX>578</locationX>
        <locationY>671</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <filterLogic>and</filterLogic>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>idRecordTypeContactPartner</elementReference>
            </value>
        </filters>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.SuppliedEmail</elementReference>
            </value>
        </filters>
        <object>Contact</object>
        <outputAssignments>
            <assignToReference>$Record.AccountId</assignToReference>
            <field>AccountId</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>$Record.ContactId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <start>
        <locationX>485</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>CaseUspDecision</targetReference>
        </connector>
        <filterFormula>AND(
ISPICKVAL({!$Record.SourceArea__c},&quot;Partner&quot;),
{!$User.Alias}=&quot;autocase&quot;
)</filterFormula>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
    <triggerOrder>80</triggerOrder>
    <variables>
        <name>AccountID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ContactWithAccountPartner</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Contact</objectType>
    </variables>
</Flow>
