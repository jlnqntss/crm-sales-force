<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>55.0</apiVersion>
    <assignments>
        <name>ControlVariableAssignment</name>
        <label>Control Variable</label>
        <locationX>754</locationX>
        <locationY>1008</locationY>
        <assignmentItems>
            <assignToReference>Control</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AssociatedTasksLoop</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>DisableMonitoring</name>
        <label>Disable Monitoring</label>
        <locationX>754</locationX>
        <locationY>1440</locationY>
        <assignmentItems>
            <assignToReference>GetCaseRelatedToTaskAction.Monitoring__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateCaseRelatedToTaskAction</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>MonitoringONAssignment</name>
        <label>Monitoring ON</label>
        <locationX>50</locationX>
        <locationY>528</locationY>
        <assignmentItems>
            <assignToReference>GetCaseRelatedToTaskAction.Monitoring__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateCaseRelatedToTaskAction</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>CaseFoundedOrNewTaskDecision</name>
        <label>Case Founded Or New Task?</label>
        <locationX>380</locationX>
        <locationY>408</locationY>
        <defaultConnector>
            <targetReference>StatusChangedToCloseDecision</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Task Not New</defaultConnectorLabel>
        <rules>
            <name>CaseNotFound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetCaseRelatedToTaskAction</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Case Not Found</label>
        </rules>
        <rules>
            <name>TaskNewOutcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>MonitoringONAssignment</targetReference>
            </connector>
            <label>Task New</label>
        </rules>
    </decisions>
    <decisions>
        <name>EnabledControlDecision</name>
        <label>Enabled Control?</label>
        <locationX>666</locationX>
        <locationY>1320</locationY>
        <defaultConnector>
            <targetReference>DisableMonitoring</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Control Disabled</defaultConnectorLabel>
        <rules>
            <name>ControlEnabledDecision</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Control</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UpdateCaseRelatedToTaskAction</targetReference>
            </connector>
            <label>Control Enabled</label>
        </rules>
    </decisions>
    <decisions>
        <name>OpenTaskDecision</name>
        <label>Open Task?</label>
        <locationX>886</locationX>
        <locationY>888</locationY>
        <defaultConnector>
            <targetReference>AssociatedTasksLoop</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Closed</defaultConnectorLabel>
        <rules>
            <name>OpenNewAsignedOutcome</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>AssociatedTasksLoop.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Nueva</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>AssociatedTasksLoop.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Asignada</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ControlVariableAssignment</targetReference>
            </connector>
            <label>Open(New/Asigned)</label>
        </rules>
    </decisions>
    <decisions>
        <name>ScaledCaseTaskDecision</name>
        <label>Scaled Case Task?</label>
        <locationX>2206</locationX>
        <locationY>288</locationY>
        <defaultConnector>
            <targetReference>UpdateRelatedCaseScheduledAction</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Scaled Case</defaultConnectorLabel>
        <rules>
            <name>ScaledCaseOutcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Scaled Case</stringValue>
                </rightValue>
            </conditions>
            <label>Scaled Case</label>
        </rules>
    </decisions>
    <decisions>
        <name>StatusChangedToCloseDecision</name>
        <label>Status Changed To Close?</label>
        <locationX>974</locationX>
        <locationY>528</locationY>
        <defaultConnectorLabel>Not Changed</defaultConnectorLabel>
        <rules>
            <name>ChangedOutcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Cerrada</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetTasksRelatedToSameCaseAction</targetReference>
            </connector>
            <label>Changed</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Task Trigger - After Insert/Update - Seguimiento USP {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Task Trigger - After Insert/Update - Seguimiento USP</label>
    <loops>
        <name>AssociatedTasksLoop</name>
        <label>Associated Tasks Loop</label>
        <locationX>666</locationX>
        <locationY>768</locationY>
        <collectionReference>GetTasksRelatedToSameCaseAction</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>OpenTaskDecision</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>EnabledControlDecision</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>CreateErrorLogGetCaseAction</name>
        <label>Create Error Log Get Case</label>
        <locationX>1810</locationX>
        <locationY>408</locationY>
        <inputAssignments>
            <field>Message__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Source_Class__c</field>
            <value>
                <stringValue>Task Trigger - After Insert/Update - Seguimiento USP</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Source_Method__c</field>
            <value>
                <stringValue>Get Case Related To Task</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Throwing_Time__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <object>Error_Log__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>CreateErrorLogGetTasksRelatedToSameCase</name>
        <label>Create Error Log Get Tasks Related To Same Case</label>
        <locationX>1018</locationX>
        <locationY>768</locationY>
        <inputAssignments>
            <field>Message__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Source_Class__c</field>
            <value>
                <stringValue>Task Trigger - After Insert/Update - Seguimiento USP</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Source_Method__c</field>
            <value>
                <stringValue>Get Tasks Related To Same Case</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Throwing_Time__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <object>Error_Log__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>CreateErrorLogScheduledUpdateAction</name>
        <label>Create Error Log After Due Date</label>
        <locationX>2602</locationX>
        <locationY>528</locationY>
        <inputAssignments>
            <field>Message__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Source_Class__c</field>
            <value>
                <stringValue>Task Trigger - After Insert/Update - Seguimiento USP</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Source_Method__c</field>
            <value>
                <stringValue>Update Related Case</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Throwing_Time__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <object>Error_Log__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>CreateErrorLogUpdateCaseRelatedToTask</name>
        <label>Create Error Log Update Case Related To Task</label>
        <locationX>1546</locationX>
        <locationY>1968</locationY>
        <inputAssignments>
            <field>Message__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Source_Class__c</field>
            <value>
                <stringValue>Task Trigger - After Insert/Update - Seguimiento USP</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Source_Method__c</field>
            <value>
                <stringValue>Update Case Related To Task</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Throwing_Time__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <object>Error_Log__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>GetCaseRelatedToTaskAction</name>
        <label>Get Case Related To Task</label>
        <locationX>380</locationX>
        <locationY>288</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CaseFoundedOrNewTaskDecision</targetReference>
        </connector>
        <faultConnector>
            <targetReference>CreateErrorLogGetCaseAction</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WhatId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Cerrado</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetTasksRelatedToSameCaseAction</name>
        <label>Get Tasks Related To Same Case</label>
        <locationX>666</locationX>
        <locationY>648</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AssociatedTasksLoop</targetReference>
        </connector>
        <faultConnector>
            <targetReference>CreateErrorLogGetTasksRelatedToSameCase</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>WhatId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetCaseRelatedToTaskAction.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Subtype__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Monitoring</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>UpdateCaseRelatedToTaskAction</name>
        <label>Update Case Related To Task</label>
        <locationX>380</locationX>
        <locationY>1848</locationY>
        <faultConnector>
            <targetReference>CreateErrorLogUpdateCaseRelatedToTask</targetReference>
        </faultConnector>
        <inputReference>GetCaseRelatedToTaskAction</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateRelatedCaseScheduledAction</name>
        <label>Update Related Case</label>
        <locationX>2338</locationX>
        <locationY>408</locationY>
        <faultConnector>
            <targetReference>CreateErrorLogScheduledUpdateAction</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WhatId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Respondido</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Cerrado</stringValue>
            </value>
        </filters>
        <inputAssignments>
            <field>PendingBy__c</field>
            <value>
                <stringValue></stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Respondido</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <start>
        <locationX>1167</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetCaseRelatedToTaskAction</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>RecordTypeDeveloperName__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Activity_USP</stringValue>
            </value>
        </filters>
        <filters>
            <field>Subtype__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Monitoring</stringValue>
            </value>
        </filters>
        <object>Task</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <scheduledPaths>
            <name>AfterDueDateCompleted</name>
            <connector>
                <targetReference>ScaledCaseTaskDecision</targetReference>
            </connector>
            <label>After Due Date Completed</label>
            <offsetNumber>1</offsetNumber>
            <offsetUnit>Minutes</offsetUnit>
            <recordField>ActivityDate</recordField>
            <timeSource>RecordField</timeSource>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>Control</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
