<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>52.0</apiVersion>
    <constants>
        <name>RowCause</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Manual</stringValue>
        </value>
    </constants>
    <decisions>
        <name>Has_Intermediary</name>
        <label>Has Intermediary</label>
        <locationX>580</locationX>
        <locationY>839</locationY>
        <defaultConnector>
            <targetReference>Is_different_owner</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Has_Intermediary_Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Intermediary__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Account_Team_Members</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_different_owner</name>
        <label>Is different owner</label>
        <locationX>778</locationX>
        <locationY>959</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.AssignedTo__r.Id</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.AssignedTo__r.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_PC_Visibility</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Valida si este registro tiene comparticiones personalizadas antiguas.</description>
        <name>Validate_old_share_values</name>
        <label>Validate old share values</label>
        <locationX>580</locationX>
        <locationY>503</locationY>
        <defaultConnector>
            <targetReference>Has_Intermediary</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Has_old_values</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Old_Shares</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Delete_old_shares</targetReference>
            </connector>
            <label>Has old values</label>
        </rules>
    </decisions>
    <description>SDM: gestiona la visibilidad de los planes comerciales al ser un objeto privado</description>
    <interviewLabel>SDM - PC Visibility {!$Flow.CurrentDateTime}</interviewLabel>
    <label>SDM - PC Visibility</label>
    <loops>
        <name>For_each_Team_Member</name>
        <label>For each Team Member</label>
        <locationX>382</locationX>
        <locationY>1079</locationY>
        <collectionReference>Get_Account_Team_Members</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Create_member_visibility</targetReference>
        </nextValueConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_member_visibility</name>
        <label>Create member visibility</label>
        <locationX>470</locationX>
        <locationY>1199</locationY>
        <connector>
            <targetReference>For_each_Team_Member</targetReference>
        </connector>
        <inputAssignments>
            <field>AccessLevel</field>
            <value>
                <stringValue>Edit</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ParentId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RowCause</field>
            <value>
                <stringValue>Manual</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>For_each_Team_Member.UserId</elementReference>
            </value>
        </inputAssignments>
        <object>PlanComercial__Share</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_PC_Visibility</name>
        <label>Create PC Visibility</label>
        <locationX>646</locationX>
        <locationY>1079</locationY>
        <inputAssignments>
            <field>AccessLevel</field>
            <value>
                <stringValue>Edit</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ParentId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RowCause</field>
            <value>
                <elementReference>RowCause</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>$Record.AssignedTo__r.Id</elementReference>
            </value>
        </inputAssignments>
        <object>PlanComercial__Share</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordDeletes>
        <name>Delete_old_shares</name>
        <label>Delete old shares</label>
        <locationX>448</locationX>
        <locationY>623</locationY>
        <connector>
            <targetReference>Has_Intermediary</targetReference>
        </connector>
        <inputReference>Old_Shares</inputReference>
    </recordDeletes>
    <recordLookups>
        <name>Get_Account_Team_Members</name>
        <label>Get Account Team Members</label>
        <locationX>383</locationX>
        <locationY>959</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>For_each_Team_Member</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Intermediary__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserId</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>AccountTeamMember</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>UserId</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Recupera los antiguos registros de compartici√≥n de visibilidad de este plan.</description>
        <name>Old_Shares</name>
        <label>Old Shares</label>
        <locationX>580</locationX>
        <locationY>383</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Validate_old_share_values</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>RowCause</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>RowCause</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>PlanComercial__Share</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>454</locationX>
        <locationY>48</locationY>
        <connector>
            <targetReference>Old_Shares</targetReference>
        </connector>
        <object>PlanComercial__c</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
